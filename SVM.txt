import pandas as pd
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
import matplotlib.pyplot as plt
get_ipython().run_line_magic('matplotlib', 'inline')
iris=load_iris()
#dir(iris)  
#iris.feature_names
#iris.target_names
#len(iris.data)
df=pd.DataFrame(iris.data, columns=iris.feature_names)
df

df["target"]=iris.target
df

#df.head()
df["flower_name"]=df.target.apply(lambda x:iris.target_names[x])
df


#df[45:55]
df0=df[:50]
df1=df[50:100]
df2=df[100:]

plt.xlabel("Sepal Length")
plt.ylabel("Sepal Width")

plt.scatter(df0["sepal length (cm)"], df0["sepal width (cm)"], color="blue", marker="o")
plt.scatter(df1["sepal length (cm)"], df1["sepal width (cm)"], color="green", marker="^")
plt.scatter(df2["sepal length (cm)"], df2["sepal width (cm)"], color="yellow", marker="+")

x=df.drop(["target", "flower_name"], axis="columns")
y=df.target
print(y)
x_train, x_test, y_train, y_test=train_test_split(x,y,test_size=0.2)
len(y_test)
model=SVC()
model.fit(x_train,y_train)
model.score(x_test,y_test)
model=SVC(C=1.0, kernel='rbf', degree=3, gamma=10, coef0=0.0, shrinking=True, probability=False, tol=0.001, cache_size=200, class_weight=None, verbose=False, max_iter=-1, decision_function_shape='ovr', break_ties=False, random_state=None)
model.fit(x_train,y_train)
model.score(x_test,y_test)
model.predict([[5.8,2.6,4.0,1.2]])